C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5,  1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5,  1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5,  1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5,  1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5,  1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5,  1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5,  1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 0, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
# Sample values for X
X <- runif(50, min = -10, max = 10)
# sample values for coefficient and exponent
C <- runif(1, min = -3, max = 3)
E <- sample(c(-1, 1, 2, 3), 1)
#generate Y using the formula Y = C * X^E
Y <- C * X^E
# sample values for the sd of the error term
error_sd <- sample(c(0, 0.5, 1, 2, 3), 1)
# Calculate Y using the formula Y = C * X^E
Y = Y + rnorm(length(X), mean = 0, sd = sd(Y) * error_sd)
# 4. Rescale Y_raw to the interval [-10, 10]
Y        <- (Y - min(Y)) / diff(range(Y)) * 20 - 10
ggplot(data = data.frame(X, Y), aes(x = X, y = Y)) +
geom_point() +
labs(title = "Scatter Plot of Y vs X",
x = "X",
y = "Y") +
theme_minimal()
cor(X, Y)
runApp('Correlator')
runApp('Correlator')
shiny::runApp('Correlator')
